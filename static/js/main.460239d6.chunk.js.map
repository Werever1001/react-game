{"version":3,"sources":["components/WinModal.js","components/Board.js","components/Footer.js","components/ResultsModal.js","App.js","reportWebVitals.js","index.js"],"names":["WinModal","props","className","isOpen","onClick","modalClose","Board","useState","openedCard","setOpenedCard","matched","setMatched","id","name","sort","Math","random","pictures","winModal","setWinModal","pairOfCards","useEffect","firstMatched","secondMatched","length","setTimeout","map","picture","index","isFlipped","includes","window","location","reload","flipCard","src","alt","width","Footer","href","ResultsModal","isResOpen","resModalClose","App","resultsModal","setResultsModal","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.460239d6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction WinModal(props) {\r\n\r\n  return (\r\n    <>\r\n      <div className={`modal ${props.isOpen ? 'open' : 'close'}`}>\r\n        <div className='modal-body win'>\r\n          <h1>Congratulations!!!</h1>\r\n          <p>You won!!!</p>\r\n          <button className=\"btn btn-secondary\" onClick={props.modalClose}>Close</button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WinModal;","import React, { useState, useEffect } from \"react\";\r\nimport WinModal from './WinModal';\r\n\r\nfunction Board() {\r\n  const [openedCard, setOpenedCard] = useState([]);\r\n  const [matched, setMatched] = useState([]);\r\n  const [pictures, ] = useState([\r\n    { id: 1, name: 'kitty1' },\r\n    { id: 2, name: 'kitty2' },\r\n    { id: 3, name: 'kitty3' },\r\n    { id: 4, name: 'kitty4' },\r\n    { id: 5, name: 'kitty5' },\r\n    { id: 6, name: 'kitty6' }\r\n  ].sort(() => Math.random() - 0.5));\r\n  const [winModal, setWinModal] = useState(true);\r\n  \r\n  const pairOfCards = [...pictures, ...pictures];\r\n\r\n  function flipCard(index) {\r\n    setOpenedCard((openedCard) => [...openedCard, index]);\r\n  }\r\n  \r\n  function refreshPage(){ \r\n    window.location.reload(); \r\n  }\r\n  useEffect(() => {\r\n    if (openedCard < 2) return;\r\n\r\n    const firstMatched = pairOfCards[openedCard[0]];\r\n    const secondMatched = pairOfCards[openedCard[1]];\r\n\r\n    if (secondMatched && firstMatched.id === secondMatched.id) {\r\n      setMatched([...matched, firstMatched.id]);\r\n    }\r\n    if (openedCard.length === 2) setTimeout(() => setOpenedCard([]), 1000);\r\n  }, [openedCard]); \r\n\r\n  return (\r\n    <div className='cards'>\r\n      { pairOfCards.map((picture, index) => {\r\n        let isFlipped = false;\r\n        if (openedCard.includes(index)) isFlipped = true;\r\n        if (matched.includes(picture.id)) isFlipped = true;\r\n        if (matched.length === pictures.length) {\r\n          return <div>\r\n            <WinModal \r\n              isOpen={winModal}\r\n              modalClose={() => {\r\n                setWinModal(false)\r\n                refreshPage()\r\n              }}\r\n            />\r\n            </div>\r\n        }\r\n        return (\r\n          <div\r\n            className={`picture-card ${isFlipped ? 'flipped' : ''} `}\r\n            key={index}\r\n            onClick={() => flipCard(index)}\r\n          >\r\n            <div className='inner'>\r\n              <div className='front'>\r\n                <img\r\n                  src={`assets/${picture.name}.png`}\r\n                  alt='name'\r\n                  width='120'\r\n                />\r\n              </div>\r\n              <div className='back'></div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className='footer'>\r\n      <div>\r\n        <a href='https://rs.school/js/'>\r\n          <img className='logo' src='./rs_school_js.svg' alt='RSSchool'></img>\r\n        </a>\r\n      </div>\r\n      <div>\r\n        <p>Designed by\r\n          <a href='https://github.com/Werever1001'> Werever1001</a>\r\n        </p>\r\n      </div>\r\n      <div>2021</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction ResultsModal(props) {\r\n  \r\n  return (\r\n    <>\r\n      <div className={`modal ${props.isResOpen ? 'open' : 'close'}`}>\r\n        <div className='modal-body'>\r\n          <h1>Results</h1>\r\n          <hr />\r\n          <ul className=\"list-group list-group-flush\">\r\n            <li className=\"list-group-item\">1. </li>\r\n            <li className=\"list-group-item\">2. </li>\r\n            <li className=\"list-group-item\">3. </li>\r\n            <li className=\"list-group-item\">4. </li>\r\n            <li className=\"list-group-item\"></li>\r\n          </ul>\r\n          <button className=\"btn btn-secondary close_btn\" onClick={props.resModalClose}>Close</button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ResultsModal;","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Board from \"./components/Board\";\nimport Footer from \"./components/Footer\";\nimport ResultsModal from \"./components/ResultsModal\";\n\nfunction App() {\n  const [resultsModal, setResultsModal] = useState(false);\n\n  function refreshPage(){ \n    window.location.reload(); \n  }\n\n  return (\n    <div className='wrapper'>\n      <div className='header'>\n        <button className=\"btn btn-secondary\" type=\"button\" onClick={refreshPage}>\n          <span>Reload</span>\n        </button>\n        <h1>Memory Game</h1>\n        <button className=\"btn btn-secondary\" onClick={() => setResultsModal(true)}>\n          <span>Results</span>\n        </button>\n      </div>\n      <div className='container'>\n        <Board /> \n        <ResultsModal \n          isResOpen={resultsModal}\n          resModalClose={() => setResultsModal(false)}\n        />\n      </div>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}